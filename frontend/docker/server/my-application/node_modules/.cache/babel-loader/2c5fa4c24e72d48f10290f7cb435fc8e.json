{"remainingRequest":"/app/my-application/node_modules/babel-loader/lib/index.js!/app/my-application/node_modules/cache-loader/dist/cjs.js??ref--1-0!/app/my-application/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/my-application/src/components/modules/MultipleTextQuestion.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/my-application/src/components/modules/MultipleTextQuestion.vue","mtime":1653033698836},{"path":"/app/my-application/babel.config.js","mtime":1652423115214},{"path":"/app/my-application/node_modules/cache-loader/dist/cjs.js","mtime":1652423462045},{"path":"/app/my-application/node_modules/babel-loader/lib/index.js","mtime":1652423464641},{"path":"/app/my-application/node_modules/cache-loader/dist/cjs.js","mtime":1652423462045},{"path":"/app/my-application/node_modules/vue-loader/lib/index.js","mtime":1652423456009}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvYXBwL215LWFwcGxpY2F0aW9uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2gtYWxsLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgeyBtYXJrZWQgfSBmcm9tICdtYXJrZWQnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIk11bHRpcGxlVGV4dFF1ZXN0aW9uIiwKICBwcm9wczogewogICAgZmxvd19zZXNzaW9uX2lkOiBOdW1iZXIsCiAgICBwYWdlX251bTogTnVtYmVyLAogICAgcGFnZV9jb250ZW50OiBPYmplY3QsCiAgICBibGFua19hbnN3ZXJzOiBBcnJheQogIH0sCiAgd2F0Y2g6IHsKICAgIHBhZ2VfY29udGVudDogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKCkgewogICAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAgIHRoaXMucGFyc2VfbWQoKTsKICAgICAgICB0aGlzLmJsYW5rX2Fuc3dlciA9IHt9OwogICAgICAgIHRoaXMuYmxhbmtfYW5zd2Vycy5mb3JFYWNoKGZ1bmN0aW9uIChiYSkgewogICAgICAgICAgX3RoaXMuYmxhbmtfYW5zd2VyW2JhLmJsYW5rX2lkXSA9IGJhLmFuc3dlcjsKICAgICAgICB9KTsKICAgICAgfSwKICAgICAgZGVlcDogdHJ1ZQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHdpbmRvdy5NYXRoSmF4Lkh1Yi5RdWV1ZShbIlR5cGVzZXQiLCB3aW5kb3cuTWF0aEpheC5IdWJdKTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICB3aW5kb3cuTWF0aEpheC5IdWIuUXVldWUoWyJUeXBlc2V0Iiwgd2luZG93Lk1hdGhKYXguSHViXSk7CiAgICB0aGlzLnBhcnNlX21kKCk7CiAgICB0aGlzLmJsYW5rX2Fuc3dlcnMuZm9yRWFjaChmdW5jdGlvbiAoYmEpIHsKICAgICAgX3RoaXMyLmJsYW5rX2Fuc3dlcltiYS5ibGFua19pZF0gPSBiYS5hbnN3ZXI7CiAgICB9KTsKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBibGFua19hbnN3ZXI6IHt9LAogICAgICBibGFua192YWx1ZXM6IHt9LAogICAgICByZXBsYWNlZF9hbnN3ZXJfY29sdW1uczogW10sCiAgICAgIGlzX2NvcnJlY3Q6ICIiCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgbWFya2Rvd25Ub0h0bWw6IGZ1bmN0aW9uIG1hcmtkb3duVG9IdG1sKG1kKSB7CiAgICAgIHdpbmRvdy5NYXRoSmF4Lkh1Yi5RdWV1ZShbIlR5cGVzZXQiLCB3aW5kb3cuTWF0aEpheC5IdWJdKTsKICAgICAgcmV0dXJuIG1hcmtlZChtZCk7CiAgICB9LAogICAgcGFyc2VfbWQ6IGZ1bmN0aW9uIHBhcnNlX21kKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciBtZCA9IHRoaXMucGFnZV9jb250ZW50LmFuc3dlcl9jb2x1bW5fY29udGVudDsKICAgICAgdmFyIHJlZ2V4cCA9IC9cW1xbXHMqPy4qP1xzKj9cXVxdL2c7CgogICAgICB2YXIgYmxhbmtzID0gX3RvQ29uc3VtYWJsZUFycmF5KG1kLm1hdGNoQWxsKHJlZ2V4cCkpOwoKICAgICAgY29uc29sZS5sb2coYmxhbmtzKTsKICAgICAgY29uc29sZS5sb2coYmxhbmtzWzBdKTsKICAgICAgY29uc29sZS5sb2coYmxhbmtzKTsKCiAgICAgIGlmIChibGFua3MgPT09ICJ1bmRlZmluZWQiKSB7CiAgICAgICAgcmV0dXJuIG1hcmtlZChyZXBsYWNlZF9tZCk7CiAgICAgIH0KCiAgICAgIHZhciByZXBsYWNlZF9tZCA9IG1kOwogICAgICB2YXIgcmVwbGFjZWRfYW5zd2VyX2NvbHVtbnMgPSBbXTsKICAgICAgYmxhbmtzLmZvckVhY2goZnVuY3Rpb24gKGJsYW5rKSB7CiAgICAgICAgdmFyIGJsYW5rX2lkID0gYmxhbmtbMF0uc2xpY2UoMiwgLTIpOwogICAgICAgIF90aGlzMy5ibGFua192YWx1ZXNbYmxhbmtfaWRdID0gIiI7CiAgICAgICAgdmFyIHNwbGl0ZWQgPSByZXBsYWNlZF9tZC5zcGxpdChibGFua1swXSk7CiAgICAgICAgcmVwbGFjZWRfYW5zd2VyX2NvbHVtbnMucHVzaCh7CiAgICAgICAgICAidHlwZSI6ICJtZCIsCiAgICAgICAgICAiZGF0YSI6IHNwbGl0ZWRbMF0KICAgICAgICB9KTsKICAgICAgICByZXBsYWNlZF9hbnN3ZXJfY29sdW1ucy5wdXNoKHsKICAgICAgICAgICJ0eXBlIjogImJsYW5rIiwKICAgICAgICAgICJkYXRhIjogYmxhbmtfaWQKICAgICAgICB9KTsKICAgICAgICByZXBsYWNlZF9tZCA9IHNwbGl0ZWRbMV07CiAgICAgIH0pOwogICAgICB0aGlzLnJlcGxhY2VkX2Fuc3dlcl9jb2x1bW5zID0gcmVwbGFjZWRfYW5zd2VyX2NvbHVtbnM7CiAgICAgIHJldHVybiBtYXJrZWQocmVwbGFjZWRfbWQpOwogICAgfSwKICAgIHJlZ2lzdGVyX2Fuc3dlcjogZnVuY3Rpb24gcmVnaXN0ZXJfYW5zd2VyKCkgewogICAgICB2YXIgcGFyYW1zID0gW107CgogICAgICBmb3IgKHZhciBibGFua19pZCBpbiB0aGlzLmJsYW5rX2Fuc3dlcikgewogICAgICAgIHBhcmFtcy5wdXNoKHsKICAgICAgICAgICJmbG93X3Nlc3Npb25faWQiOiB0aGlzLmZsb3dfc2Vzc2lvbl9pZCwKICAgICAgICAgICJwYWdlX251bSI6IHRoaXMucGFnZV9udW0sCiAgICAgICAgICAiYmxhbmtfaWQiOiBibGFua19pZCwKICAgICAgICAgICJhbnN3ZXIiOiB0aGlzLmJsYW5rX2Fuc3dlcltibGFua19pZF0KICAgICAgICB9KTsKICAgICAgfQoKICAgICAgY29uc29sZS5sb2cocGFyYW1zKTsKICAgICAgdmFyIGNvbmZpZyA9IHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgfSwKICAgICAgICB3aXRoQ3JlZGVudGlhbHM6IHRydWUKICAgICAgfTsKICAgICAgdmFyIHNlbGYgPSB0aGlzOwogICAgICBheGlvcy5wb3N0KCJodHRwOi8vbG9jYWxob3N0OjgwMDAvcmVnaXN0ZXJfYmxhbmtfYW5zd2VyIiwgcGFyYW1zLCBjb25maWcpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgc2VsZi5pc19jb3JyZWN0ID0gIiI7CiAgICAgICAgc2VsZi5jbnQgPSAwOyAvLyDmraPop6Pjga7mlbDjgpLjgqvjgqbjg7Pjg4gKCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXNwb25zZS5kYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YVtpXVsiaXNfY29ycmVjdCJdID09IHRydWUpIHsKICAgICAgICAgICAgc2VsZi5jbnQrKzsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGNvbnNvbGUubG9nKHNlbGYuY250KTsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhLmxlbmd0aCk7IC8vIOWFqOWVj+ato+ino+OBquOCieato+ino+OBqOihqOekugoKICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5sZW5ndGggPT0gc2VsZi5jbnQpIHsKICAgICAgICAgIHNlbGYuaXNfY29ycmVjdCA9ICLmraPop6PjgafjgZnvvIHvvIEiOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzZWxmLmlzX2NvcnJlY3QgPSAi5LiN5q2j6Kej44Gn44GZIjsKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AAEA;AACAA,8BADA;AAEAC;AACAC,2BADA;AAEAC,oBAFA;AAGAC,wBAHA;AAIAC;AAJA,GAFA;AAQAC;AACAF;AACAG;AAAA;;AACA;AACA;AACA;AACA;AACA,SAFA;AAGA,OAPA;AAQAC;AARA;AADA,GARA;AAoBAC,SApBA,qBAoBA;AACAC;AACA,GAtBA;AAuBAC;AAAA;;AACAD;AAEA;AACA;AACA;AACA,KAFA;AAGA,GA9BA;AA+BAE;AAAA;AACAC,sBADA;AAEAC,sBAFA;AAGAC,iCAHA;AAIAC;AAJA;AAAA,GA/BA;AAqCAC;AACAC,kBADA,0BACAC,EADA,EACA;AACAT;AACA;AACA,KAJA;AAKAU,YALA,sBAKA;AAAA;;AACA;AACA;;AACA;;AACAC;AACAA;AACAA;;AAEA;AACA;AACA;;AACA;AACA;AACAC;AACA;AACA;AACA;AACAP;AAAA;AAAA;AAAA;AACAA;AAAA;AAAA;AAAA;AACAQ;AACA,OAPA;AAQA;AACA;AACA,KA5BA;AA8BAC,mBA9BA,6BA8BA;AACA;;AACA;AACAC;AACA,iDADA;AAEA,mCAFA;AAGA,8BAHA;AAIA;AAJA;AAMA;;AACAJ;AACA;AACAK;AACA;AADA,SADA;AAIAC;AAJA;AAMA;AACAC,gFACAC,IADA,CACA;AACAR;AACAS;AACAA,qBAHA,CAGA;;AACA;AACA;AACAA;AACA;AACA;;AACAT;AACAA,0CAVA,CAWA;;AACA;AACAS;AACA,SAFA,MAEA;AACAA;AACA;AACA,OAlBA,EAkBAC,KAlBA,CAmBA;AACAV;AACA,OArBA;AAuBA;AAvEA;AArCA","names":["name","props","flow_session_id","page_num","page_content","blank_answers","watch","handler","deep","mounted","window","created","data","blank_answer","blank_values","replaced_answer_columns","is_correct","methods","markdownToHtml","md","parse_md","console","blanks","replaced_md","register_answer","params","headers","withCredentials","axios","then","self","catch"],"sources":["MultipleTextQuestion.vue"],"sourcesContent":["<template>\n    <v-container class=\"pa-0\">\n      <v-responsive :min-height=\"300\">\n        <v-container>\n          <div v-html=\"markdownToHtml(page_content.content)\"></div>\n        </v-container>\n      </v-responsive>\n      <v-container class=\"pa-0\">\n        <div :class=\"`rounded-lg`\" class=\"pa-8 grey lighten-3 text-no-wrap\"  >\n          <v-row v-for=\"answer_column in this.replaced_answer_columns\" :key=answer_column.data>\n            <div v-html=\"markdownToHtml(answer_column.data)\" v-if=\"answer_column.type=='md'\"></div>\n            <v-text-field\n              v-if=\"answer_column.type=='blank'\"\n              background-color=\"white\"\n              label=\"回答を入力\"\n              v-model= \"blank_answer[answer_column.data]\"\n              filled\n            ></v-text-field>\n          </v-row>\n          <v-row align=\"end\" justify=\"end\">\n\n            <v-btn @click=\"register_answer()\" color=\"primary\" width=\"100\"> 回答する </v-btn>\n            </v-row>\n        </div>\n      </v-container>\n      <v-container class=\"pa-0 mt-4\">\n        <div :class=\"`rounded-lg`\" class=\"pa-6 mt-6 green lighten-5 text-no-wrap\" v-if=\"is_correct=='正解です！！'\">\n          <v-row>\n            {{is_correct}}\n          </v-row>\n        </div>\n        <div :class=\"`rounded-lg`\" class=\"pa-6 mt-6 red lighten-5 text-no-wrap\" v-if=\"is_correct=='不正解です'\">\n          <v-row>\n            {{is_correct}}\n          </v-row>\n          <v-row>\n            解説：数列の和の公式を確認しよう！！\n\n          </v-row>\n        </div>\n      </v-container>\n    </v-container>\n</template>\n<script>\nimport axios from \"axios\";\nimport { marked } from 'marked';\n\nexport default {\n  name: \"MultipleTextQuestion\",\n  props: {\n    flow_session_id: Number,\n    page_num: Number,\n    page_content: Object,\n    blank_answers: Array,\n  },\n  watch: {\n    page_content: {\n      handler: function () {\n        this.parse_md()\n        this.blank_answer = {}\n        this.blank_answers.forEach(ba => {\n          this.blank_answer[ba.blank_id] = ba.answer\n        });\n      },\n      deep: true\n    }\n  },\n  mounted() {\n   window.MathJax.Hub.Queue([\"Typeset\", window.MathJax.Hub]);\n  },\n  created: function() {\n    window.MathJax.Hub.Queue([\"Typeset\", window.MathJax.Hub]);\n\n    this.parse_md()\n    this.blank_answers.forEach(ba => {\n      this.blank_answer[ba.blank_id] = ba.answer\n    });\n  },\n  data: () => ({\n    blank_answer: {},\n    blank_values: {},\n    replaced_answer_columns: [],\n    is_correct: \"\"\n  }),\n  methods:{\n    markdownToHtml(md){\n      window.MathJax.Hub.Queue([\"Typeset\", window.MathJax.Hub]);\n      return marked(md);\n    },\n    parse_md(){\n      const md = this.page_content.answer_column_content\n      const regexp = /\\[\\[\\s*?.*?\\s*?\\]\\]/g\n      const blanks = [...md.matchAll(regexp)]\n      console.log(blanks)\n      console.log(blanks[0])\n      console.log(blanks)\n\n      if (blanks === \"undefined\") {\n        return marked(replaced_md)\n      }\n      let replaced_md = md\n      let replaced_answer_columns = []\n      blanks.forEach(blank => {\n        let blank_id = blank[0].slice(2,-2)\n        this.blank_values[blank_id] = \"\"\n        const splited = replaced_md.split(blank[0])\n        replaced_answer_columns.push({\"type\":\"md\", \"data\": splited[0]})\n        replaced_answer_columns.push({\"type\":\"blank\", \"data\": blank_id})\n        replaced_md = splited[1]\n      });\n      this.replaced_answer_columns = replaced_answer_columns\n      return marked(replaced_md)\n    },\n\n    register_answer(){\n      const params = []\n      for (const blank_id in this.blank_answer){\n        params.push({\n          \"flow_session_id\": this.flow_session_id,\n          \"page_num\": this.page_num,\n          \"blank_id\": blank_id,\n          \"answer\": this.blank_answer[blank_id]\n        })\n      }\n      console.log(params)\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      };\n      let self = this\n      axios.post(`http://localhost:8000/register_blank_answer`, params, config)\n      .then(function(response){\n        console.log(response.data)\n        self.is_correct =\"\"\n        self.cnt = 0 // 正解の数をカウント\n        for(let i=0; i< response.data.length; i++){\n          if(response.data[i][\"is_correct\"] == true){\n            self.cnt ++\n          }\n        }\n        console.log(self.cnt)\n        console.log(response.data.length)\n        // 全問正解なら正解と表示\n        if(response.data.length==self.cnt){\n          self.is_correct=\"正解です！！\"\n        }else{\n          self.is_correct=\"不正解です\"\n        }\n      }).catch(\n        function(error){\n          console.log(error)\n        }\n      )\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/components/modules"}]}